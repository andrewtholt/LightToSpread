
CFLAGS=-g -DFICL # -Wall
# CFLAGS=-g # -Wall
INC=-I/usr/local/include
#
# 
# Don't build old utilities.  Retained for future reference.
#
# BINS= lightSink lightSource spreadSource spreadSink # mine # PthreadsExample
BINS= lightSink lightSource toSpread 
LIBS=-lpthread -lspread -ldl -L/usr/local/lib -lficl -lm
LFLAGS=-Wl,--no-as-needed 

all:	$(BINS)

toSpread:	main.c 
	$(CC) $(INC) $(CFLAGS) $(LFLAGS) -o toSpread main.c -lspread -L/usr/local/lib -lsqlite3 -lpthread

lightSink:	lightSink.c
	$(CC) $(INC) $(CFLAGS) $(LFLAGS) -o lightSink lightSink.c -L/usr/local/lib -lspread -ldl

lightSource:	lightSource.c
	$(CC) $(INC) $(CFLAGS) $(LFLAGS) -o lightSource lightSource.c -L/usr/local/lib -lspread -ldl

spreadSource:	source.o hash.o  connectToSpread.o
	$(CC) $(INC) $(CFLAGS) $(LFLAGS) source.o hash.o connectToSpread.o -o spreadSource -lpthread -lspread -ldl -L/usr/local/lib -lficl -lm

source.o:	source.c mine.h hash.h hash.o
	$(CC) $(INC) -c $(CFLAGS) -Wall source.c -o source.o 

spreadSink:	sink.o hash.o  connectToSpread.o
#	$(CC) $(INC) $(CFLAGS) sink.o hash.o connectToSpread.o -o spreadSink -lpthread -lspread -ldl -lm  -lficl
	$(CC) $(INC) $(CFLAGS) $(LFLAGS) sink.o hash.o connectToSpread.o -o spreadSink $(LIBS)

sink.o:	sink.c mine.h hash.h hash.o
	$(CC) $(INC) -c $(CFLAGS) -Wall sink.c -o sink.o 

connectToSpread.o:	connectToSpread.c connectToSpread.h
	$(CC) $(INC) -c $(CFLAGS) connectToSpread.c -o connectToSpread.o

PthreadsExample:	PthreadsExample.c
	$(CC) $(CFLAGS) PthreadsExample.c -o PthreadsExample -lpthread -ldl

hash.o:	hash.h hash.c mine.h
	$(CC) $(CFLAGS) -c hash.c -o hash.o

clean:
	rm -f $(BINS) *.o *~ cscope.out

install:	$(BINS)
	mkdir -p $(DESTDIR)/usr/local/bin
	cp $(BINS) $(DESTDIR)/usr/local/bin
	mkdir -p $(DESTDIR)/usr/local/etc/lightToSpread/App
	cp sink_start.rc source_start.rc $(DESTDIR)/usr/local/etc/lightToSpread
	cp App/*.fth $(DESTDIR)/usr/local/etc/lightToSpread/App

docs:
	doxygen
backup:	clean
	./backup.sh
